name: ci

on: [push, pull_request]

jobs:
  test_install:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10.x"
      - name: create virtualenv
        run: |
          pip install virtualenv
          virtualenv .venv
          . .venv/bin/activate
      # Do this in reverse order of the things depending on each other.
      # Probably gives us the best failure insights.
      - name: install serialization
        run: pip install ./serialization
      - name: install actor_controller
        run: pip install ./actor_controller
      - name: install simulation
        run: pip install ./simulation
      - name: install modular_robot
        run: pip install ./modular_robot
      - name: install rpi_controller
        run: pip install ./rpi_controller
      - name: install rpi_controller_remote
        run: pip install ./rpi_controller_remote
      - name: install experimentation
        run: pip install ./experimentation
      - name: install simulators/mujoco
        run: pip install ./simulators/mujoco
      - name: install ci_group
        run: pip install ./ci_group
      - name: install examples requirements
        run: |
          pip install -r examples/robot_bodybrain_ea_database/requirements.txt
          pip install -r examples/robot_brain_cmaes_database/requirements.txt
          pip install -r examples/simple_ea_xor_database/requirements.txt

  check_format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: install_tools
        run: pip install -r ./codetools/requirements.txt
      - name: black
        run: ./codetools/black/check.sh
      - name: isort
        run: ./codetools/isort/check.sh
      - name: pydocstyle
        run: ./codetools/pydocstyle/check.sh
      - name: darglint
        run: ./codetools/darglint/check.sh
      - name: pyflakes
        run: ./codetools/pyflakes/check.sh
      - name: sort-all
        run: |
          ./codetools/sort_all/fix.sh
          [[ -z $(git status -s) ]]
          git checkout -- .

  mypy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10.x"
      - name: create virtualenv
        run: |
          pip install virtualenv
          virtualenv .venv
          . .venv/bin/activate
      - name: install serialization
        run: pip install ./serialization[dev]
      - name: install actor_controller
        run: pip install ./actor_controller[dev]
      - name: install simulation
        run: pip install ./simulation[dev]
      - name: install modular_robot
        run: pip install ./modular_robot[dev]
      - name: install rpi_controller
        run: pip install ./rpi_controller[dev]
      - name: install rpi_controller_remote
        run: pip install ./rpi_controller_remote[dev]
      - name: install experimentation
        run: pip install ./experimentation[dev]
      - name: install simulators/mujoco
        run: pip install ./simulators/mujoco[dev]
      - name: install ci_group
        run: pip install ./ci_group[dev]
      - name: install examples requirements
        run: |
          pip install -r examples/robot_bodybrain_ea_database/requirements.txt
          pip install -r examples/robot_brain_cmaes_database/requirements.txt
          pip install -r examples/simple_ea_xor_database/requirements.txt
      - name: install requirements for mypy
        run: pip install -r ./codetools/mypy/requirements.txt
      - name: run mypy
        run: ./codetools/mypy/check.sh

  docs:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10.x"
      - name: create virtualenv
        run: |
          pip install virtualenv
          virtualenv .venv
          . .venv/bin/activate
      - name: install serialization
        run: pip install ./serialization
      - name: install actor_controller
        run: pip install ./actor_controller
      - name: install simulation
        run: pip install ./simulation
      - name: install modular_robot
        run: pip install ./modular_robot
      - name: install rpi_controller
        run: pip install ./rpi_controller
      - name: install rpi_controller_remote
        run: pip install ./rpi_controller_remote
      - name: install experimentation
        run: pip install ./experimentation
      - name: install simulators/mujoco
        run: pip install ./simulators/mujoco
      - name: install ci_group
        run: pip install ./ci_group
      - name: install requirements for sphinx
        run: pip install -r ./docs/requirements.txt
      - name: sphinx
        run: make -C docs html
      - name: deploy
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          folder: docs/build/html
          clean-exclude: .nojekyll